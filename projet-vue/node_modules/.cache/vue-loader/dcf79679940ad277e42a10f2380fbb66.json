{"remainingRequest":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/debian/iot/projet-vue/src/components/Chart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/debian/iot/projet-vue/src/components/Chart.vue","mtime":1588836312410},{"path":"/home/debian/iot/projet-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZ2hjaGFydHMtZmlndXJlLCAuaGlnaGNoYXJ0cy1kYXRhLXRhYmxlIHRhYmxlIHsKICAgIG1pbi13aWR0aDogMzIwcHg7CiAgICBtYXgtd2lkdGg6IDcwMHB4OwogICAgbWFyZ2luOiAxZW0gYXV0bzsKfQoKLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0YWJsZSB7CiAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIHNhbnMtc2VyaWY7CiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICBib3JkZXI6IDFweCBzb2xpZCAjRUJFQkVCOwogIG1hcmdpbjogMTBweCBhdXRvOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB3aWR0aDogMTAwJTsKICBtYXgtd2lkdGg6IDUwMHB4Owp9Ci5oaWdoY2hhcnRzLWRhdGEtdGFibGUgY2FwdGlvbiB7CiAgICBwYWRkaW5nOiAxZW0gMDsKICAgIGZvbnQtc2l6ZTogMS4yZW07CiAgICBjb2xvcjogIzU1NTsKfQouaGlnaGNoYXJ0cy1kYXRhLXRhYmxlIHRoIHsKICBmb250LXdlaWdodDogNjAwOwogICAgcGFkZGluZzogMC41ZW07Cn0KLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0ZCwgLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0aCwgLmhpZ2hjaGFydHMtZGF0YS10YWJsZSBjYXB0aW9uIHsKICAgIHBhZGRpbmc6IDAuNWVtOwp9Ci5oaWdoY2hhcnRzLWRhdGEtdGFibGUgdGhlYWQgdHIsIC5oaWdoY2hhcnRzLWRhdGEtdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHsKICAgIGJhY2tncm91bmQ6ICNmOGY4Zjg7Cn0KLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0cjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kOiAjZjFmN2ZmOwp9Cgo="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqTA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <div>\n    <md-button class=\"md-primary md-raised\" @click=\"start\">Start simulation</md-button>\n    <br />\n    <br />\n    <highcharts :options=\"options\" ref=\"highcharts\"></highcharts>\n    <highcharts :options=\"options2\" ref=\"highcharts\"></highcharts>\n    <br />\n    <br />\n    <highcharts :options=\"options3\" ref=\"highcharts\"></highcharts>\n  </div>\n\n</template>\n\n<script>\nimport { Chart } from \"highcharts-vue\";\nimport Highcharts from \"highcharts\";\nimport exportingInit from \"highcharts/modules/exporting\";\nimport stockInit from \"highcharts/modules/stock\";\n\n\nstockInit(Highcharts);\nexportingInit(Highcharts);\n\nvar options = {\n  chart: {\n    type: \"spline\",\n    zoomType: 'x',\n    panning: true,\n    panKey: 'shift'\n  },\n  title: {\n    text: \"Temperature\",\n    x: -20 //center\n  },\n  subtitle: {\n    text: \"Cliquez et faites glisser pour zoomer.\"\n  },\n\n  xAxis: {\n    title: {\n      text: \"Heure\"\n    },\n    type: \"datetime\"\n  },\n  yAxis: {\n    title: {\n      text: \"Temperature (°C)\"\n    },\n    \n    plotLines: [\n      {\n        value: 0,\n        width: 1,\n        color: \"#808080\"\n      }\n    ]\n  },\n  tooltip: {\n    valueSuffix: \"°C\"\n  },\n  legend: {\n    layout: \"vertical\",\n    align: \"right\",\n    verticalAlign: \"middle\",\n    borderWidth: 0\n  },\n  series: [\n    {\n      name: \"ESP1\",\n      data: []\n    },\n    {\n      name: \"ESP2\",\n      data: []\n    },\n    {\n      name: \"ESP3\",\n      data: []\n    },\n    {\n      name: \"ESP4\",\n      data: []\n    }\n  ]\n};\nvar options2 = {\n  chart: {\n    type: \"spline\",\n    zoomType: 'x',\n    panning: true,\n    panKey: 'shift'\n  },\n  title: {\n    text: \"Lumière\",\n    x: -20 //center\n  },\n  subtitle: {\n    text: \"Cliquez et faites glisser pour zoomer.\"\n  },\n  xAxis: {\n    title: {\n      text: \"Heure\"\n    },\n    type: \"datetime\"\n  },\n  yAxis: {\n    title: {\n      text: \"Lumen (Lum)\"\n    },\n    plotBands: [{ // Nuit\n      from: 0,\n      to: 1000,\n      color: 'rgba(68, 138, 255, 0.1)',\n      label: {\n          text: 'NUIT',\n          style: {\n              color: '#000000'\n          }\n      }\n    },{ // Jour\n      from: 1000,\n      to: 5000,\n      color: 'rgba(246, 113, 42, 0.1)',\n      label: {\n          text: 'JOUR',\n          style: {\n              color: '#000000'\n          }\n      }\n    },],\n    plotLines: [\n      {\n        value: 0,\n        width: 1,\n        color: \"#808080\"\n      }\n    ]\n  },\n  tooltip: {\n    valueSuffix: \"Lum\"\n  },\n  legend: {\n    layout: \"vertical\",\n    align: \"right\",\n    verticalAlign: \"middle\",\n    borderWidth: 0\n  },\n  series: [\n    {\n      name: \"ESP1\",\n      data: []\n    },\n    {\n      name: \"ESP2\",\n      data: []\n    },\n    {\n      name: \"ESP3\",\n      data: []\n    },\n    {\n      name: \"ESP4\",\n      data: []\n    }\n  ]\n};\n var options3 = {\n    chart: {\n        polar: true,\n        type: 'line'\n    },\n    accessibility: {\n        description: 'Température de votre piscine.'\n    },\n    title: {\n        text: 'Température',\n        x: -80\n    },\n    xAxis: {\n        categories: ['Température'],\n        tickmarkPlacement: 'on',\n        lineWidth: 0\n    },\n    yAxis: {\n        gridLineInterpolation: 'polygon',\n        lineWidth: 0,\n        min: 0\n    },\n    tooltip: {\n        shared: true,\n        pointFormat: '<span style=\"color:{series.color}\">{series.name}: <b>{point.y:,.0f} °C</b><br/>'\n    },\n    series: [{\n        name: 'Température',\n        data: [25],\n        pointPlacement: 'on'\n    }],\n};\nexport default {\n  props: {\n    which_esps: Array\n    ,\n    k: Number,\n    partsdata: {\n      type: Array\n    }\n  },\n\n  components: {\n    highcharts: Chart\n  },\n\n  data() {\n    return {\n      node_url: \"\",\n      items: [],\n      options: options,\n      options2: options2,\n      options3: options3,\n      listeData: []\n    };\n  },\n  mounted(){\n \n  },\n  methods: {\n    start: function() {\n      /*    var chart = this.$refs.highcharts.chart;\n      chart.credits.update({\n        style: {\n          color: \"#\" + ((Math.random() * 0xffffff) | 0).toString(16)\n        }\n      }); */\n      /*which_esps: [\n        \"30:AE:A4:86:C3:20\",\n        \"30:AE:A4:86:CA:7C\",\n        \"\"\n      ];*/\n      for (var i = 0; i < this.which_esps.length; i++) {\n          this.process_esp(this.which_esps, i);\n        } \n     \n    },\n\n    process_esp(which_esps, i) {\n      const refreshT = 100000; // Refresh period for chart\n      var esp = which_esps[i]; // L'ESP \"a dessiner\"\n    \n      // Gestion de la temperature\n      // premier appel pour eviter de devoir attendre RefreshT\n      this.get_samples(\"/esp/temp\", this.options.series[i], esp);\n      //calls a function or evaluates an expression at specified\n      //intervals (in milliseconds).\n      window.setInterval(\n        this.get_samples,\n        refreshT,\n        \"/esp/temp\", // param 1 for get_samples()\n        this.options.series[i], // param 2 for get_samples()\n        esp\n      ); // param 3 for get_samples()\n\n      // Gestion de la lumiere\n      this.get_samples(\"/esp/light\", this.options2.series[i], esp);\n      window.setInterval(\n        this.get_samples,\n        refreshT,\n        \"/esp/light\", // URL to GET\n        this.options2.series[i], // Serie to fill\n        esp\n      ); // ESP targeted\n    },\n\n    get_samples(path_on_node, serie, wh) {\n      // path_on_node => help to compose url to get on Js node\n      // serie => for choosing chart/serie on the page\n      // wh => which esp do we want to query data\n\n      this.node_url = \"http://51.210.15.67:3000\";\n      //console.log(\"Test fonction get_samples\");\n      var liste = []\n      //wh = \"30:AE:A4:86:CA:7C\";\n\n      let url = this.node_url + path_on_node + \"?who=\" + wh;\n      fetch(url)\n        .then(responseJSON => {\n          return responseJSON.json();\n        })\n        .then(responseJS => {\n          this.items = responseJS;\n\n          if (this.items) {\n            this.items.forEach(function(element) {\n                liste.push([Date.parse(element.date), element.value]);\n            });\n          }\n          serie.data = liste;\n          //console.log(\"TEST : \" +liste)\n        });\n    }\n\n\n\n\n  }\n};\n</script>\n<style>\n.highcharts-figure, .highcharts-data-table table {\n    min-width: 320px;\n    max-width: 700px;\n    margin: 1em auto;\n}\n\n.highcharts-data-table table {\n  font-family: Verdana, sans-serif;\n  border-collapse: collapse;\n  border: 1px solid #EBEBEB;\n  margin: 10px auto;\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n}\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n.highcharts-data-table th {\n  font-weight: 600;\n    padding: 0.5em;\n}\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\n    padding: 0.5em;\n}\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n\n</style>"]}]}