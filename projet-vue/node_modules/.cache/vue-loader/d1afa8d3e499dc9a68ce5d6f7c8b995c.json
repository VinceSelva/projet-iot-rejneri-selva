{"remainingRequest":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/debian/iot/projet-vue/src/components/Graphiques.vue?vue&type=style&index=0&id=bb0d3e46&scoped=true&lang=css&","dependencies":[{"path":"/home/debian/iot/projet-vue/src/components/Graphiques.vue","mtime":1589186339599},{"path":"/home/debian/iot/projet-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/debian/iot/projet-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1kLXRhYmxlLWhlYWQgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["Graphiques.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA","file":"Graphiques.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1> Bienvenue sur les graphiques </h1>\n      <div id=\"Graphique\">\n        <div class=\"contentGraphique\">\n          <p>Voici votre page Graphiques.\n            Ici vous avez accès à la température et à la luminosité en temps réel.\n          </p>\n        </div>\n      </div>\n    <h1>{{ msg }}</h1>\n    <div id=\"app\">\n       \n      <Chart  :k=\"componentKey\" :which_esps= \"which_esps\"/>\n      <label for=\"MAC\">Votre adresse MAC : </label>\n      <input type=\"text\" id=\"MAC\" name=\"MAC\"><br><br>\n      <md-button class=\"md-accent md-raised\" type=\"button\" v-on:click=\"ajoutMAC()\">Rejoindre en tant qu'invité</md-button>\n    </div>\n    <!-- <md-input v-model=\"name\"></md-input>\n    <md-button class=\"md-primary md-raised\" v-on:click=\"addFloat(name)\">Add to fleet</md-button>-->\n      \n    <h1>LED states</h1>\n    <md-table>\n      <md-table-row slot=\"md-table-row\">\n        <md-table-head md-label=\"Name\">ESP</md-table-head>\n        <md-table-head md-label=\"Actions\">Action</md-table-head>\n      </md-table-row>\n      <md-table-row>\n        <md-table-cell md-label=\"Name\">Piscine</md-table-cell>\n        <md-table-cell md-label=\"Actions\">\n          <md-button class=\"md-primary md-raised\" v-on:click=\"switchState('30:AE:A4:86:CA:7C')\">PING</md-button>\n        </md-table-cell>\n      </md-table-row>\n      <md-table-row>\n        <md-table-cell md-label=\"Name\">Poulailler</md-table-cell>\n        <md-table-cell md-label=\"Actions\">\n          <md-button class=\"md-primary md-raised\" v-on:click=\"switchState('30:AE:A4:86:C3:20')\">PING</md-button>\n        </md-table-cell>\n      </md-table-row>\n      <md-table-row>\n        <md-table-cell md-label=\"Name\">{{ which_esps[3] }}</md-table-cell>\n        <md-table-cell md-label=\"Actions\">\n          <md-button class=\"md-primary md-raised\" v-on:click=\"switchState(which_esps[3])\">PING</md-button>\n        </md-table-cell>\n      </md-table-row>\n    </md-table>\n  </div>\n</template>\n\n<script>\n//var Highcharts = require(\"highcharts\");\nimport Chart from \"./Chart\";\n\n//import highcharts from 'https://code.highcharts.com/highcharts.js'\nexport default {\n  name: \"Graphiques\",\n  data() {\n    return {\n      states: [],\n      node_url: \"http://51.210.15.67:3000\",\n      which_esps: [\n        \"30:AE:A4:86:C3:20\",\n        \"30:AE:A4:86:CA:7C\",\n        \"\"\n      ],\n      name: \"\",\n      componentKey: 0\n    };\n  },\n  components: {\n    Chart\n  },\n  props: {\n    msg: String\n  },\n  mounted() {},\n\n  methods: {\n    ajoutMAC() {\n      var adMac = document.getElementById(\"MAC\");\n      console.log(\"MAC: \" + adMac.value);\n      this.which_esps[3] = adMac.value;\n      console.log(this.which_esps);\n     // this.start();\n      this.forceRerender();\n    },\n     forceRerender() {\n      this.componentKey += 1;  \n    },\n    start: function() {\n      for (var i = 0; i < this.which_esps.length; i++) {\n        this.getStates(\"/esp/light\", [], this.which_esps[i]);\n      }\n      for (var j = 0; j < this.which_esps.length; j++) {\n        this.getStates(\"/esp/temp\", [], this.which_esps[j]);\n      }\n    },\n    getStates(path_on_node, serie, wh) {\n      this.node_url = \"http://51.210.15.67:3000\";\n      //console.log(\"Test fonction getStates\");\n      var liste = [];\n      let url = this.node_url + path_on_node + \"?who=\" + wh;\n      fetch(url)\n        .then(responseJSON => {\n          return responseJSON.json();\n        })\n        .then(responseJS => {\n          this.items = responseJS;\n\n          if (this.items) {\n            this.items.forEach(function(element) {\n              liste.push([Date.parse(element.date), element.value]);\n            });\n          }\n          serie.data = liste;\n          //console.log(liste);\n        });\n    },\n\n    async switchState(wh) {\n      var url = this.node_url + \"/esp/led\";\n      var message = \"on\";\n      var header = new Headers();\n      header.append(\"Content-Type\", \"application/json\");\n      await fetch(url, {\n        method: \"POST\",\n        headers: header,\n        body: JSON.stringify({\n          message: message,\n          who: wh\n        })\n      });\n    },\n\n    async addFlotte(wh) {\n      this.which_esps.append(wh);\n      var url = this.node_url + \"/flotte\";\n      var header = new Headers();\n      header.append(\"Content-Type\", \"application/json\");\n      await fetch(url, {\n        method: \"POST\",\n        headers: header,\n        body: JSON.stringify({\n          who: wh\n        })\n      });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.md-table-head {\n  text-align: center;\n}\n</style>\n"]}]}