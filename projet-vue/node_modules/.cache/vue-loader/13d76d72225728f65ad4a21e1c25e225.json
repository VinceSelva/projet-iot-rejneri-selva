{"remainingRequest":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/src/components/Poulailler.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/src/components/Poulailler.vue","mtime":1587661468902},{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/css-loader/dist/cjs.js","mtime":1587659708287},{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1587659760995},{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/postcss-loader/src/index.js","mtime":1587659740348},{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/cache-loader/dist/cjs.js","mtime":1587659693373},{"path":"/mnt/c/Users/clement/OneDrive/Bureau/IOT REJNERI SELVA NEW/projet-iot-rejneri-selva/projet-vue/node_modules/vue-loader/lib/index.js","mtime":1587659760983}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMXsKICBmb250LXNpemU6IDQwcHg7Cn0KCi5sZWRQb3VsYWlsbGVyewogIGZvbnQtc2l6ZTogMjVweDsKICBmbG9hdDogbGVmdDsKICBtYXJnaW4tdG9wOiAzMDBweDsKICBtYXJnaW4tbGVmdDogMTAwcHg7Cn0KLm1hbmdlclBvdWxhaWxsZXJ7CiAgZm9udC1zaXplOiAyNXB4OwogIGZsb2F0OiByaWdodDsKICBtYXJnaW4tdG9wOiAzMDBweDsKICBtYXJnaW4tcmlnaHQ6IDEwMHB4Owp9CgoKLmNvbnRlbnRQb3VsYWlsbGVyewogIGZvbnQtc2l6ZTogMThweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Poulailler.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"Poulailler.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1> Bienvenue sur le poulailler </h1>\n\n      <div class=\"ledPoulailler\">\n        <p> Gestion du poulailler </p>\n        <md-button class=\"md-primary md-raised\" v-on:click=\"switchState('30:AE:A4:86:C3:20')\">Ouvrir le poulailler</md-button>\n        <br>\n        <md-button class=\"md-primary md-raised\" v-on:click=\"switchState('30:AE:A4:86:C3:20')\">Fermer le poulailler</md-button>\n\n      </div>\n\n      <div class=\"mangerPoulailler\">\n        <p> Gestion nourriture </p>\n        <md-button class=\"md-primary md-raised\" v-on:click=\"switchState('30:AE:A4:86:C3:20')\">Je sais pas quoi</md-button>\n        <p> BlaBla </p>\n        <p> BlaBla </p>\n        <p> BlaBla </p>\n        <p> BlaBla </p>\n        <p> BlaBla </p>\n      </div>\n\n      <div class=\"tempPoulailler\">\n        <p> Gestion de la piscine </p>\n\n        <p id=\"\">Température de l'eau : {{lastTemp}} °C</p>\n        <p id=\"\">Luminosité : {{lastLuminosite}} Lum</p>\n\n      </div>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"Poulailler\",\n  data() {\n    return {\n      states: [],\n      lastTemp: null,\n      lastLuminosite: null,\n      node_url: \"http://localhost:3000\",\n      which_esps: [\n        \"30:AE:A4:86:C3:20\",\n        \"30:AE:A4:86:CA:7C\",\n        \"\"\n      ],\n      name: \"\",\n      componentKey: 0\n    };\n  },\n  created: function () {\n       //this.get_states(\"/esp/temp\", [], \"\");\n       //this.get_states(\"/esp/light\", [], \"\");\n       this.process_esp();\n    },\n  components: {\n    \n  },\n  props: {\n    msg: String\n  },\n  mounted() {},\n\n  methods: {\n    start: function() {\n      for (var i = 0; i < this.which_esps.length; i++) {\n        this.get_states(\"/esp/light\", [], this.which_esps[i]);\n      }\n      for (var j = 0; j < this.which_esps.length; j++) {\n        this.get_states(\"/esp/temp\", [], this.which_esps[j]);\n      }\n    },\n\n    async switchState(wh) {\n      var url = this.node_url + \"/esp/led\";\n      var message = \"on\";\n      var header = new Headers();\n      header.append(\"Content-Type\", \"application/json\");\n      await fetch(url, {\n        method: \"POST\",\n        headers: header,\n        body: JSON.stringify({\n          message: message,\n          who: wh\n        })\n      });\n    },\n    process_esp() {\n      const refreshT = 5000; // Refresh period for chart\n      var esp = \"30:AE:A4:86:CA:7C\";\n      //var esp = which_esps[i]; // L'ESP \"a dessiner\"\n\n      // Gestion de la temperature\n      // premier appel pour eviter de devoir attendre RefreshT\n      this.get_states(\"/esp/temp\",0, esp);\n      //calls a function or evaluates an expression at specified\n      //intervals (in milliseconds).\n      window.setInterval(\n        this.get_states,\n        refreshT,\n        \"/esp/temp\", // param 1 for get_samples()\n        0, // param 2 for get_samples()\n        esp\n      ); // param 3 for get_samples()\n\n      // Gestion de la lumiere\n      this.get_states(\"/esp/light\", 0, esp);\n      window.setInterval(\n        this.get_states,\n        refreshT,\n        \"/esp/light\", // URL to GET\n        0, // Serie to fill\n        esp\n      ); // ESP targeted\n    },\n    lastValue(path, val){\n       if(path == \"/esp/temp\"){\n                      //document.getElementById(\"temp\").innerHTML = \"La Température est de \" + val + \"°C\";\n            this.lastTemp = val;\n       }\n       if(path == \"/esp/light\"){\n                      //document.getElementById(\"light\").innerHTML = \"La Lumiere est de \" + val + \" lumen\";\n            this.lastLuminosite = val;\n       }\n       console.log(\"Last \" + path + \" : \" + val);\n    },\n\n    get_states(path_on_node, serie, wh) {\n\n      this.node_url = \"http://localhost:3000\";\n\n      var liste = []\n      wh = \"30:AE:A4:86:CA:7C\";\n      let url = this.node_url + path_on_node + \"?who=\" + wh;\n      fetch(url)\n        .then(responseJSON => {\n          return responseJSON.json();\n        })\n        .then(responseJS => {\n          this.items = responseJS;\n\n          if (this.items) {\n            this.items.forEach(function(element) {\n                liste.push([Date.parse(element.date), element.value]);\n            });\n          }\n          this.lastValue(path_on_node,(liste[(liste.length - 1)][1]));\n\n        });\n    },\n\n\n\n  }\n};\n</script>\n\n<style>\n\nh1{\n  font-size: 40px;\n}\n\n.ledPoulailler{\n  font-size: 25px;\n  float: left;\n  margin-top: 300px;\n  margin-left: 100px;\n}\n.mangerPoulailler{\n  font-size: 25px;\n  float: right;\n  margin-top: 300px;\n  margin-right: 100px;\n}\n\n\n.contentPoulailler{\n  font-size: 18px;\n  text-align: center;\n}\n</style>"]}]}